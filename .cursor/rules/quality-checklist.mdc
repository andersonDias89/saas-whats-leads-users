---
alwaysApply: true
---
# Checklist de Qualidade - Cursor SaaS WhatsApp Leads

## ✅ Antes de Commitar

### **Lint e Build:**
- [ ] `npm run lint` - Sem erros ou warnings
- [ ] `npm run build` - Build bem-sucedido
- [ ] `npx tsc --noEmit` - Verificação de tipos

### **Código:**
- [ ] Imports não utilizados removidos
- [ ] Variáveis não utilizadas removidas
- [ ] Dependências de useEffect corretas
- [ ] Tipagem TypeScript adequada
- [ ] Status em português (`'novo'`, `'contactado'`, `'convertido'`)

### **Estrutura:**
- [ ] APIs em `/api/` (nunca rotas alternativas)
- [ ] Webhooks configurados corretamente
- [ ] Validação com Zod implementada
- [ ] Tratamento de erros adequado

## 🚨 Erros Comuns a Evitar

### **Imports Não Utilizados:**
```typescript
// ❌ Errado
import { useState, useEffect, useCallback } from 'react'
// useCallback não usado

// ✅ Correto
import { useState, useEffect } from 'react'
```

### **Dependências useEffect:**
```typescript
// ❌ Errado
useEffect(() => {
  fetchData()
}, []) // fetchData não nas dependências

// ✅ Correto
const fetchData = useCallback(async () => {
  // lógica
}, [])

useEffect(() => {
  fetchData()
}, [fetchData])
```

### **Status Inconsistentes:**
```typescript
// ❌ Errado
{ value: 'new', label: 'Novo' }

// ✅ Correto
{ value: 'novo', label: 'Novo' }
```

## 📚 Documentação
- [docs/lint-build-errors-guide.md](mdc:docs/lint-build-errors-guide.md) - Erros corrigidos
- [docs/best-practices.md](mdc:docs/best-practices.md) - Melhores práticas

## 🔍 Comandos Úteis
```bash
npm run lint          # Verificar lint
npm run lint:fix      # Corrigir lint automaticamente
npm run build         # Verificar build
npx tsc --noEmit      # Verificar tipos
```
